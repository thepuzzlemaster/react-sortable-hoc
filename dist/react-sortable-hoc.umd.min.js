!(function(e, t) {
  'object' == typeof exports && 'undefined' != typeof module
    ? t(exports, require('react'), require('prop-types'))
    : 'function' == typeof define && define.amd
    ? define(['exports', 'react', 'prop-types'], t)
    : t(((e = e || self).SortableHOC = {}), e.React, e.PropTypes);
})(this, function(e, a, t) {
  'use strict';
  function n(e, t) {
    return e((t = {exports: {}}), t.exports), t.exports;
  }
  t = t && Object.prototype.hasOwnProperty.call(t, 'default') ? t.default : t;
  var l = n(function(e) {
    function t() {
      return (
        (e.exports = t =
          Object.assign ||
          function(e) {
            for (var t = 1; t < arguments.length; t++) {
              var n,
                r = arguments[t];
              for (n in r)
                Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
            }
            return e;
          }),
        t.apply(this, arguments)
      );
    }
    e.exports = t;
  });
  var r = function(e) {
    if (Array.isArray(e)) return e;
  };
  var o = function(e, t) {
    if ('undefined' != typeof Symbol && Symbol.iterator in Object(e)) {
      var n = [],
        r = !0,
        o = !1,
        i = void 0;
      try {
        for (
          var a, l = e[Symbol.iterator]();
          !(r = (a = l.next()).done) && (n.push(a.value), !t || n.length !== t);
          r = !0
        );
      } catch (e) {
        (o = !0), (i = e);
      } finally {
        try {
          r || null == l.return || l.return();
        } finally {
          if (o) throw i;
        }
      }
      return n;
    }
  };
  var i = function(e, t) {
    (null == t || t > e.length) && (t = e.length);
    for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
    return r;
  };
  var s = function(e, t) {
    if (e) {
      if ('string' == typeof e) return i(e, t);
      var n = Object.prototype.toString.call(e).slice(8, -1);
      return (
        'Object' === n && e.constructor && (n = e.constructor.name),
        'Map' === n || 'Set' === n
          ? Array.from(e)
          : 'Arguments' === n ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
          ? i(e, t)
          : void 0
      );
    }
  };
  var c = function() {
    throw new TypeError(
      'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.',
    );
  };
  var u = function(e, t) {
    return r(e) || o(e, t) || s(e, t) || c();
  };
  var f = function(e, t) {
    if (!(e instanceof t))
      throw new TypeError('Cannot call a class as a function');
  };
  function d(e, t) {
    for (var n = 0; n < t.length; n++) {
      var r = t[n];
      (r.enumerable = r.enumerable || !1),
        (r.configurable = !0),
        'value' in r && (r.writable = !0),
        Object.defineProperty(e, r.key, r);
    }
  }
  var h = function(e, t, n) {
    return t && d(e.prototype, t), n && d(e, n), e;
  };
  var p = function(e) {
      if (void 0 === e)
        throw new ReferenceError(
          "this hasn't been initialised - super() hasn't been called",
        );
      return e;
    },
    y = n(function(n) {
      function r(e, t) {
        return (
          (n.exports = r =
            Object.setPrototypeOf ||
            function(e, t) {
              return (e.__proto__ = t), e;
            }),
          r(e, t)
        );
      }
      n.exports = r;
    });
  var g = function(e, t) {
      if ('function' != typeof t && null !== t)
        throw new TypeError(
          'Super expression must either be null or a function',
        );
      (e.prototype = Object.create(t && t.prototype, {
        constructor: {value: e, writable: !0, configurable: !0},
      })),
        t && y(e, t);
    },
    m = n(function(t) {
      function n(e) {
        return (
          'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
            ? (t.exports = n = function(e) {
                return typeof e;
              })
            : (t.exports = n = function(e) {
                return e &&
                  'function' == typeof Symbol &&
                  e.constructor === Symbol &&
                  e !== Symbol.prototype
                  ? 'symbol'
                  : typeof e;
              }),
          n(e)
        );
      }
      t.exports = n;
    });
  var v = function(e, t) {
      return !t || ('object' !== m(t) && 'function' != typeof t) ? p(e) : t;
    },
    x = n(function(t) {
      function n(e) {
        return (
          (t.exports = n = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function(e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              }),
          n(e)
        );
      }
      t.exports = n;
    });
  var b = function(e, t, n) {
      return (
        t in e
          ? Object.defineProperty(e, t, {
              value: n,
              enumerable: !0,
              configurable: !0,
              writable: !0,
            })
          : (e[t] = n),
        e
      );
    },
    w = function(e, t, n, r, o, i, a, l) {
      var s, c, u;
      if (!e)
        throw (void 0 === t
          ? (u = new Error(
              'Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.',
            ))
          : ((s = [n, r, o, i, a, l]),
            (c = 0),
            ((u = new Error(
              t.replace(/%s/g, function() {
                return s[c++];
              }),
            )).name = 'Invariant Violation')),
        (u.framesToPop = 1),
        u);
    },
    S =
      (h(O, [
        {
          key: 'clear',
          value: function() {
            null != this.interval &&
              (clearInterval(this.interval), (this.interval = null));
          },
        },
        {
          key: 'update',
          value: function(e) {
            var t = this,
              n = e.translate,
              r = e.minTranslate,
              o = e.maxTranslate,
              i = e.width,
              a = e.height,
              l = {x: 0, y: 0},
              s = {x: 1, y: 1},
              c = 10,
              u = 10,
              f = this.container,
              d = f.scrollTop,
              h = f.scrollLeft,
              p = f.scrollHeight,
              y = f.scrollWidth,
              e = 0 === d,
              p = p - d - f.clientHeight == 0,
              d = 0 === h,
              f = y - h - f.clientWidth == 0;
            n.y >= o.y - a / 2 && !p
              ? ((l.y = 1), (s.y = u * Math.abs((o.y - a / 2 - n.y) / a)))
              : n.x >= o.x - i / 2 && !f
              ? ((l.x = 1), (s.x = c * Math.abs((o.x - i / 2 - n.x) / i)))
              : n.y <= r.y + a / 2 && !e
              ? ((l.y = -1), (s.y = u * Math.abs((n.y - a / 2 - r.y) / a)))
              : n.x <= r.x + i / 2 &&
                !d &&
                ((l.x = -1), (s.x = c * Math.abs((n.x - i / 2 - r.x) / i))),
              this.interval && (this.clear(), (this.isAutoScrolling = !1)),
              (0 === l.x && 0 === l.y) ||
                (this.interval = setInterval(function() {
                  t.isAutoScrolling = !0;
                  var e = {left: s.x * l.x, top: s.y * l.y};
                  (t.container.scrollTop += e.top),
                    (t.container.scrollLeft += e.left),
                    t.onScrollCallback(e);
                }, 5));
          },
        },
      ]),
      O);
  function O(e, t) {
    f(this, O), (this.container = e), (this.onScrollCallback = t);
  }
  var C =
    (h(T, [
      {
        key: 'add',
        value: function(e, t) {
          this.refs[e] || (this.refs[e] = []), this.refs[e].push(t);
        },
      },
      {
        key: 'remove',
        value: function(e, t) {
          t = this.getIndex(e, t);
          -1 !== t && this.refs[e].splice(t, 1);
        },
      },
      {
        key: 'isActive',
        value: function() {
          return this.active;
        },
      },
      {
        key: 'getActive',
        value: function() {
          var t = this;
          return this.refs[this.active.collection].find(function(e) {
            return e.node.sortableInfo.index == t.active.index;
          });
        },
      },
      {
        key: 'getIndex',
        value: function(e, t) {
          return this.refs[e].indexOf(t);
        },
      },
      {
        key: 'getOrderedRefs',
        value: function() {
          var e =
            0 < arguments.length && void 0 !== arguments[0]
              ? arguments[0]
              : this.active.collection;
          return this.refs[e].sort(I);
        },
      },
    ]),
    T);
  function T() {
    f(this, T), b(this, 'refs', {});
  }
  function I(e, t) {
    return e.node.sortableInfo.index - t.node.sortableInfo.index;
  }
  var E = a.forwardRef(function(e, t) {
    return a.createElement('div', {ref: t}, e.children);
  });
  E.displayName = 'ChildComponent';
  var R = function(e) {
    if (Array.isArray(e)) return i(e);
  };
  var k = function(e) {
    if ('undefined' != typeof Symbol && Symbol.iterator in Object(e))
      return Array.from(e);
  };
  var D = function() {
    throw new TypeError(
      'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.',
    );
  };
  var A = function(e) {
    return R(e) || k(e) || s(e) || D();
  };
  function P(n, r) {
    return Object.keys(n).reduce(function(e, t) {
      return -1 === r.indexOf(t) && (e[t] = n[t]), e;
    }, {});
  }
  var j = {
      end: ['touchend', 'touchcancel', 'mouseup'],
      move: ['touchmove', 'mousemove'],
      start: ['touchstart', 'mousedown'],
    },
    N = (function() {
      if ('undefined' == typeof window || 'undefined' == typeof document)
        return '';
      var e = window.getComputedStyle(document.documentElement, '') || [
          '-moz-hidden-iframe',
        ],
        e = (Array.prototype.slice
          .call(e)
          .join('')
          .match(/-(moz|webkit|ms)-/) ||
          ('' === e.OLink && ['', 'o']))[1];
      return 'ms' !== e
        ? e && e.length
          ? e[0].toUpperCase() + e.substr(1)
          : ''
        : 'ms';
    })();
  function M(t, n) {
    Object.keys(n).forEach(function(e) {
      t.style[e] = n[e];
    });
  }
  function W(e, t) {
    e.style[''.concat(N, 'Transform')] =
      null == t ? '' : 'translate3d('.concat(t.x, 'px,').concat(t.y, 'px,0)');
  }
  function L(e, t) {
    e.style[''.concat(N, 'TransitionDuration')] =
      null == t ? '' : ''.concat(t, 'ms');
  }
  function H(e, t) {
    for (; e; ) {
      if (t(e)) return e;
      e = e.parentNode;
    }
    return null;
  }
  function K(e, t, n) {
    return Math.max(e, Math.min(n, t));
  }
  function G(e) {
    return 'px' === e.substr(-2) ? parseFloat(e) : 0;
  }
  function _(e, t) {
    t = t.displayName || t.name;
    return t ? ''.concat(e, '(').concat(t, ')') : e;
  }
  function B(e, t) {
    e = e.getBoundingClientRect();
    return {top: e.top + t.top, left: e.left + t.left};
  }
  function U(e) {
    return e.touches && e.touches.length
      ? {x: e.touches[0].pageX, y: e.touches[0].pageY}
      : e.changedTouches && e.changedTouches.length
      ? {x: e.changedTouches[0].pageX, y: e.changedTouches[0].pageY}
      : {x: e.pageX, y: e.pageY};
  }
  function X(e, t, n) {
    n = 2 < arguments.length && void 0 !== n ? n : {left: 0, top: 0};
    if (e) {
      n = {left: n.left + e.offsetLeft, top: n.top + e.offsetTop};
      return e.parentNode === t ? n : X(e.parentNode, t, n);
    }
  }
  function Y(e) {
    var t = e.lockOffset,
      n = e.width,
      r = e.height,
      o = t,
      i = t,
      a = 'px';
    return (
      'string' == typeof t &&
        ((e = /^[+-]?\d*(?:\.\d*)?(px|%)$/.exec(t)),
        w(
          null !== e,
          'lockOffset value should be a number or a string of a number followed by "px" or "%". Given %s',
          t,
        ),
        (o = parseFloat(t)),
        (i = parseFloat(t)),
        (a = e[1])),
      w(
        isFinite(o) && isFinite(i),
        'lockOffset value should be a finite. Given %s',
        t,
      ),
      '%' === a && ((o = (o * n) / 100), (i = (i * r) / 100)),
      {x: o, y: i}
    );
  }
  function F(e) {
    return e instanceof HTMLElement
      ? ((t = e),
        (n = window.getComputedStyle(t)),
        (r = /(auto|scroll)/),
        ['overflow', 'overflowX', 'overflowY'].find(function(e) {
          return r.test(n[e]);
        })
          ? e
          : F(e.parentNode))
      : null;
    var t, n, r;
  }
  var V = 27,
    q = 32,
    z = 37,
    $ = 38,
    J = 39,
    Q = 40,
    Z = {
      Anchor: 'A',
      Button: 'BUTTON',
      Canvas: 'CANVAS',
      Input: 'INPUT',
      Option: 'OPTION',
      Textarea: 'TEXTAREA',
      Select: 'SELECT',
    };
  function ee(n) {
    var r = (function() {
      if ('undefined' == typeof Reflect || !Reflect.construct) return !1;
      if (Reflect.construct.sham) return !1;
      if ('function' == typeof Proxy) return !0;
      try {
        return (
          Date.prototype.toString.call(
            Reflect.construct(Date, [], function() {}),
          ),
          !0
        );
      } catch (e) {
        return !1;
      }
    })();
    return function() {
      var e,
        t = x(n);
      return (
        (t = r
          ? ((e = x(this).constructor), Reflect.construct(t, arguments, e))
          : t.apply(this, arguments)),
        v(this, t)
      );
    };
  }
  function te(t) {
    var e,
      n =
        1 < arguments.length && void 0 !== arguments[1]
          ? arguments[1]
          : {withRef: !1},
      r = (e = (function(e) {
        g(i, e);
        var o = ee(i);
        function i() {
          var e;
          f(this, i);
          for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
            n[r] = arguments[r];
          return (
            (e = o.call.apply(o, [this].concat(n))),
            b(p(e), 'childRef', a.createRef(null)),
            b(p(e), 'wrappedInstance', a.createRef()),
            e
          );
        }
        return (
          h(i, [
            {
              key: 'componentDidMount',
              value: function() {
                this.childRef.current.sortableHandle = !0;
              },
            },
            {
              key: 'getWrappedInstance',
              value: function() {
                return (
                  w(
                    n.withRef,
                    'To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableHandle() call',
                  ),
                  this.wrappedInstance.current
                );
              },
            },
            {
              key: 'render',
              value: function() {
                var e = n.withRef ? this.wrappedInstance : null;
                return a.createElement(
                  E,
                  {ref: this.childRef},
                  a.createElement(t, l({ref: e}, this.props)),
                );
              },
            },
          ]),
          i
        );
      })(a.Component));
    return b(e, 'displayName', _('sortableHandle', t)), r;
  }
  function ne(e) {
    return null != e.sortableHandle;
  }
  var re = {
      axis: t.oneOf(['x', 'y', 'xy']),
      contentWindow: t.any,
      disableAutoscroll: t.bool,
      distance: t.number,
      getContainer: t.func,
      getHelperDimensions: t.func,
      helperClass: t.string,
      helperContainer: t.oneOfType([
        t.func,
        'undefined' == typeof HTMLElement ? t.any : t.instanceOf(HTMLElement),
      ]),
      hideSortableGhost: t.bool,
      keyboardSortingTransitionDuration: t.number,
      lockAxis: t.string,
      lockOffset: t.oneOfType([
        t.number,
        t.string,
        t.arrayOf(t.oneOfType([t.number, t.string])),
      ]),
      lockToContainerEdges: t.bool,
      onSortEnd: t.func,
      onSortMove: t.func,
      onSortOver: t.func,
      onSortStart: t.func,
      pressDelay: t.number,
      pressThreshold: t.number,
      keyCodes: t.shape({
        lift: t.arrayOf(t.number),
        drop: t.arrayOf(t.number),
        cancel: t.arrayOf(t.number),
        up: t.arrayOf(t.number),
        down: t.arrayOf(t.number),
      }),
      shouldCancelStart: t.func,
      transitionDuration: t.number,
      updateBeforeSortStart: t.func,
      useDragHandle: t.bool,
      useWindowAsScrollContainer: t.bool,
    },
    oe = {lift: [q], drop: [q], cancel: [V], up: [$, z], down: [Q, J]},
    ie = {
      axis: 'y',
      disableAutoscroll: !1,
      distance: 0,
      getHelperDimensions: function(e) {
        return {height: (e = e.node).offsetHeight, width: e.offsetWidth};
      },
      hideSortableGhost: !0,
      lockOffset: '50%',
      lockToContainerEdges: !1,
      pressDelay: 0,
      pressThreshold: 5,
      keyCodes: oe,
      shouldCancelStart: function(e) {
        return (
          -1 !==
            [Z.Input, Z.Textarea, Z.Select, Z.Option, Z.Button].indexOf(
              e.target.tagName,
            ) ||
          !!H(e.target, function(e) {
            return 'true' === e.contentEditable;
          })
        );
      },
      transitionDuration: 300,
      useWindowAsScrollContainer: !1,
    },
    ae = Object.keys(re);
  function le(t, e) {
    var n,
      r = Object.keys(t);
    return (
      Object.getOwnPropertySymbols &&
        ((n = Object.getOwnPropertySymbols(t)),
        e &&
          (n = n.filter(function(e) {
            return Object.getOwnPropertyDescriptor(t, e).enumerable;
          })),
        r.push.apply(r, n)),
      r
    );
  }
  function se(t) {
    for (var e = 1; e < arguments.length; e++) {
      var n = null != arguments[e] ? arguments[e] : {};
      e % 2
        ? le(Object(n), !0).forEach(function(e) {
            b(t, e, n[e]);
          })
        : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
        : le(Object(n)).forEach(function(e) {
            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e));
          });
    }
    return t;
  }
  function ce(n) {
    var r = (function() {
      if ('undefined' == typeof Reflect || !Reflect.construct) return !1;
      if (Reflect.construct.sham) return !1;
      if ('function' == typeof Proxy) return !0;
      try {
        return (
          Date.prototype.toString.call(
            Reflect.construct(Date, [], function() {}),
          ),
          !0
        );
      } catch (e) {
        return !1;
      }
    })();
    return function() {
      var e,
        t = x(n);
      return (
        (t = r
          ? ((e = x(this).constructor), Reflect.construct(t, arguments, e))
          : t.apply(this, arguments)),
        v(this, t)
      );
    };
  }
  var ue = a.createContext({manager: {}});
  function fe(t) {
    var e,
      o =
        1 < arguments.length && void 0 !== arguments[1]
          ? arguments[1]
          : {withRef: !1},
      n = (e = (function(e) {
        g(r, e);
        var n = ce(r);
        function r(e) {
          var m;
          f(this, r),
            (m = n.call(this, e)),
            b(p(m), 'state', {}),
            b(p(m), 'childRef', a.createRef(null)),
            b(p(m), 'handleStart', function(e) {
              var t,
                n,
                r = m.props,
                o = r.distance,
                i = r.shouldCancelStart;
              2 === e.button ||
                i(e) ||
                ((m.touched = !0),
                (m.position = U(e)),
                (n = H(e.target, function(e) {
                  return null != e.sortableInfo;
                })) &&
                  n.sortableInfo &&
                  m.nodeIsChild(n) &&
                  !m.state.sorting &&
                  ((t = m.props.useDragHandle),
                  (i = (r = n.sortableInfo).index),
                  (n = r.collection),
                  r.disabled ||
                    (t && !H(e.target, ne)) ||
                    ((m.manager.active = {collection: n, index: i}),
                    ((i = e).touches && i.touches.length) ||
                      (i.changedTouches && i.changedTouches.length) ||
                      e.target.tagName !== Z.Anchor ||
                      e.preventDefault(),
                    o ||
                      (0 === m.props.pressDelay
                        ? m.handlePress(e)
                        : (m.pressTimer = setTimeout(function() {
                            return m.handlePress(e);
                          }, m.props.pressDelay))))));
            }),
            b(p(m), 'nodeIsChild', function(e) {
              return e.sortableInfo.manager === m.manager;
            }),
            b(p(m), 'handleMove', function(e) {
              var t,
                n = m.props,
                r = n.distance,
                o = n.pressThreshold;
              m.state.sorting ||
                !m.touched ||
                m._awaitingUpdateBeforeSortStart ||
                ((t = U(e)),
                (n = {x: m.position.x - t.x, y: m.position.y - t.y}),
                (t = Math.abs(n.x) + Math.abs(n.y)),
                (m.delta = n),
                r || (o && !(o <= t))
                  ? r && r <= t && m.manager.isActive() && m.handlePress(e)
                  : (clearTimeout(m.cancelTimer),
                    (m.cancelTimer = setTimeout(m.cancel, 0))));
            }),
            b(p(m), 'handleEnd', function() {
              (m.touched = !1), m.cancel();
            }),
            b(p(m), 'cancel', function() {
              var e = m.props.distance;
              m.state.sorting ||
                (e || clearTimeout(m.pressTimer), (m.manager.active = null));
            }),
            b(p(m), 'handlePress', function(g) {
              try {
                var r = m.manager.getActive(),
                  e = (function() {
                    if (r) {
                      var e = function() {
                          var n,
                            e,
                            t = h.sortableInfo.index,
                            r =
                              ((a = h),
                              {
                                bottom: G(
                                  (a = window.getComputedStyle(a)).marginBottom,
                                ),
                                left: G(a.marginLeft),
                                right: G(a.marginRight),
                                top: G(a.marginTop),
                              }),
                            o =
                              ((e = m.container),
                              'grid' ===
                              (e = window.getComputedStyle(e)).display
                                ? {x: G(e.gridColumnGap), y: G(e.gridRowGap)}
                                : {x: 0, y: 0}),
                            i = m.scrollContainer.getBoundingClientRect(),
                            a = s({index: t, node: h, collection: p});
                          (m.node = h),
                            (m.margin = r),
                            (m.gridGap = o),
                            (m.width = a.width),
                            (m.height = a.height),
                            (m.marginOffset = {
                              x: m.margin.left + m.margin.right + m.gridGap.x,
                              y: Math.max(
                                m.margin.top,
                                m.margin.bottom,
                                m.gridGap.y,
                              ),
                            }),
                            (m.boundingClientRect = h.getBoundingClientRect()),
                            (m.containerBoundingRect = i),
                            (m.index = t),
                            (m.newIndex = t),
                            (m.axis = {
                              x: 0 <= l.indexOf('x'),
                              y: 0 <= l.indexOf('y'),
                            }),
                            (m.offsetEdge = X(h, m.container)),
                            (m.initialOffset = U(
                              y
                                ? se(
                                    se({}, g),
                                    {},
                                    {
                                      pageX: m.boundingClientRect.left,
                                      pageY: m.boundingClientRect.top,
                                    },
                                  )
                                : g,
                            )),
                            (m.initialScroll = {
                              left: m.scrollContainer.scrollLeft,
                              top: m.scrollContainer.scrollTop,
                            }),
                            (m.initialWindowScroll = {
                              left: window.pageXOffset,
                              top: window.pageYOffset,
                            }),
                            (m.helper = m.helperContainer.appendChild(
                              ((e =
                                'input, textarea, select, canvas, [contenteditable]'),
                              (n = (o = h).querySelectorAll(e)),
                              (o = o.cloneNode(!0)),
                              A(o.querySelectorAll(e)).forEach(function(e, t) {
                                'file' !== e.type && (e.value = n[t].value),
                                  'radio' === e.type &&
                                    e.name &&
                                    (e.name = '__sortableClone__'.concat(
                                      e.name,
                                    )),
                                  e.tagName === Z.Canvas &&
                                    0 < n[t].width &&
                                    0 < n[t].height &&
                                    e.getContext('2d').drawImage(n[t], 0, 0);
                              }),
                              o),
                            )),
                            M(m.helper, {
                              boxSizing: 'border-box',
                              height: ''.concat(m.height, 'px'),
                              left: ''.concat(
                                m.boundingClientRect.left - r.left,
                                'px',
                              ),
                              pointerEvents: 'none',
                              position: 'fixed',
                              top: ''.concat(
                                m.boundingClientRect.top - r.top,
                                'px',
                              ),
                              width: ''.concat(m.width, 'px'),
                            }),
                            y && m.helper.focus(),
                            u &&
                              M((m.sortableGhost = h), {
                                opacity: 0,
                                visibility: 'hidden',
                              }),
                            (m.minTranslate = {}),
                            (m.maxTranslate = {}),
                            y
                              ? ((e = (a = d
                                  ? {
                                      top: 0,
                                      left: 0,
                                      width: m.contentWindow.innerWidth,
                                      height: m.contentWindow.innerHeight,
                                    }
                                  : m.containerBoundingRect).top),
                                (o = a.left),
                                (r = a.width),
                                (a = e + a.height),
                                (r = o + r),
                                m.axis.x &&
                                  ((m.minTranslate.x =
                                    o - m.boundingClientRect.left),
                                  (m.maxTranslate.x =
                                    r - (m.boundingClientRect.left + m.width))),
                                m.axis.y &&
                                  ((m.minTranslate.y =
                                    e - m.boundingClientRect.top),
                                  (m.maxTranslate.y =
                                    a - (m.boundingClientRect.top + m.height))))
                              : (m.axis.x &&
                                  ((m.minTranslate.x =
                                    (d ? 0 : i.left) -
                                    m.boundingClientRect.left -
                                    m.width / 2),
                                  (m.maxTranslate.x =
                                    (d
                                      ? m.contentWindow.innerWidth
                                      : i.left + i.width) -
                                    m.boundingClientRect.left -
                                    m.width / 2)),
                                m.axis.y &&
                                  ((m.minTranslate.y =
                                    (d ? 0 : i.top) -
                                    m.boundingClientRect.top -
                                    m.height / 2),
                                  (m.maxTranslate.y =
                                    (d
                                      ? m.contentWindow.innerHeight
                                      : i.top + i.height) -
                                    m.boundingClientRect.top -
                                    m.height / 2))),
                            c &&
                              c.split(' ').forEach(function(e) {
                                return m.helper.classList.add(e);
                              }),
                            (m.listenerNode = g.touches ? h : m.contentWindow),
                            y
                              ? (m.listenerNode.addEventListener(
                                  'wheel',
                                  m.handleKeyEnd,
                                  !0,
                                ),
                                m.listenerNode.addEventListener(
                                  'mousedown',
                                  m.handleKeyEnd,
                                  !0,
                                ),
                                m.listenerNode.addEventListener(
                                  'keydown',
                                  m.handleKeyDown,
                                ))
                              : (j.move.forEach(function(e) {
                                  return m.listenerNode.addEventListener(
                                    e,
                                    m.handleSortMove,
                                    !1,
                                  );
                                }),
                                j.end.forEach(function(e) {
                                  return m.listenerNode.addEventListener(
                                    e,
                                    m.handleSortEnd,
                                    !1,
                                  );
                                })),
                            m.setState({sorting: !0, sortingIndex: t}),
                            f &&
                              f(
                                {
                                  node: h,
                                  index: t,
                                  collection: p,
                                  isKeySorting: y,
                                  nodes: m.manager.getOrderedRefs(),
                                  helper: m.helper,
                                },
                                g,
                              ),
                            y && m.keyMove(0);
                        },
                        t = m.props,
                        l = t.axis,
                        s = t.getHelperDimensions,
                        c = t.helperClass,
                        u = t.hideSortableGhost,
                        n = t.updateBeforeSortStart,
                        f = t.onSortStart,
                        d = t.useWindowAsScrollContainer,
                        h = r.node,
                        p = r.collection,
                        y = m.manager.isKeySorting,
                        t = (function() {
                          if ('function' == typeof n) {
                            m._awaitingUpdateBeforeSortStart = !0;
                            var e = (function(e, t) {
                              try {
                                var n = e();
                              } catch (e) {
                                return t(!0, e);
                              }
                              return n && n.then
                                ? n.then(t.bind(null, !1), t.bind(null, !0))
                                : t(!1, n);
                            })(
                              function() {
                                var e = h.sortableInfo.index;
                                return Promise.resolve(
                                  n(
                                    {
                                      collection: p,
                                      index: e,
                                      node: h,
                                      isKeySorting: y,
                                    },
                                    g,
                                  ),
                                ).then(function() {});
                              },
                              function(e, t) {
                                if (
                                  ((m._awaitingUpdateBeforeSortStart = !1), e)
                                )
                                  throw t;
                                return t;
                              },
                            );
                            if (e && e.then) return e.then(function() {});
                          }
                        })();
                      return t && t.then ? t.then(e) : e();
                    }
                  })();
                return Promise.resolve(
                  e && e.then ? e.then(function() {}) : void 0,
                );
              } catch (e) {
                return Promise.reject(e);
              }
            }),
            b(p(m), 'handleSortMove', function(e) {
              var t = m.props.onSortMove;
              'function' == typeof e.preventDefault && e.preventDefault(),
                m.updateHelperPosition(e),
                m.animateNodes(),
                m.autoscroll(),
                t && t(e);
            }),
            b(p(m), 'handleSortEnd', function(e) {
              var t = m.props,
                n = t.hideSortableGhost,
                r = t.onSortEnd,
                o = m.manager,
                t = o.active.collection,
                o = o.isKeySorting,
                i = m.manager.getOrderedRefs();
              m.listenerNode &&
                (o
                  ? (m.listenerNode.removeEventListener(
                      'wheel',
                      m.handleKeyEnd,
                      !0,
                    ),
                    m.listenerNode.removeEventListener(
                      'mousedown',
                      m.handleKeyEnd,
                      !0,
                    ),
                    m.listenerNode.removeEventListener(
                      'keydown',
                      m.handleKeyDown,
                    ))
                  : (j.move.forEach(function(e) {
                      return m.listenerNode.removeEventListener(
                        e,
                        m.handleSortMove,
                      );
                    }),
                    j.end.forEach(function(e) {
                      return m.listenerNode.removeEventListener(
                        e,
                        m.handleSortEnd,
                      );
                    }))),
                m.helper.parentNode.removeChild(m.helper),
                n &&
                  m.sortableGhost &&
                  M(m.sortableGhost, {opacity: '', visibility: ''});
              for (var a = 0, l = i.length; a < l; a++) {
                var s = i[a],
                  c = s.node;
                (s.edgeOffset = null),
                  W(c, (s.boundingClientRect = null)),
                  L(c, null),
                  (s.translate = null);
              }
              m.autoScroller.clear(),
                (m.manager.active = null),
                (m.manager.isKeySorting = !1),
                m.setState({sorting: !1, sortingIndex: null}),
                'function' == typeof r &&
                  r(
                    {
                      collection: t,
                      newIndex: m.newIndex,
                      oldIndex: m.index,
                      isKeySorting: o,
                      nodes: i,
                    },
                    e,
                  ),
                (m.touched = !1);
            }),
            b(p(m), 'autoscroll', function() {
              var e = m.props.disableAutoscroll,
                t = m.manager.isKeySorting;
              if (e) m.autoScroller.clear();
              else {
                if (t) {
                  var n = se({}, m.translate),
                    e = 0,
                    t = 0;
                  return (
                    m.axis.x &&
                      ((n.x = Math.min(
                        m.maxTranslate.x,
                        Math.max(m.minTranslate.x, m.translate.x),
                      )),
                      (e = m.translate.x - n.x)),
                    m.axis.y &&
                      ((n.y = Math.min(
                        m.maxTranslate.y,
                        Math.max(m.minTranslate.y, m.translate.y),
                      )),
                      (t = m.translate.y - n.y)),
                    (m.translate = n),
                    W(m.helper, m.translate),
                    (m.scrollContainer.scrollLeft += e),
                    void (m.scrollContainer.scrollTop += t)
                  );
                }
                m.autoScroller.update({
                  height: m.height,
                  maxTranslate: m.maxTranslate,
                  minTranslate: m.minTranslate,
                  translate: m.translate,
                  width: m.width,
                });
              }
            }),
            b(p(m), 'onAutoScroll', function(e) {
              (m.translate.x += e.left),
                (m.translate.y += e.top),
                m.animateNodes();
            }),
            b(p(m), 'handleKeyDown', function(e) {
              var t = e.keyCode,
                n = m.props,
                r = n.shouldCancelStart,
                n = n.keyCodes,
                n = void 0 === n ? {} : n,
                n = se(se({}, oe), n);
              (m.manager.active && !m.manager.isKeySorting) ||
                !(
                  m.manager.active ||
                  (n.lift.includes(t) && !r(e) && m.isValidSortingTarget(e))
                ) ||
                (e.stopPropagation(),
                e.preventDefault(),
                n.lift.includes(t) && !m.manager.active
                  ? m.keyLift(e)
                  : n.drop.includes(t) && m.manager.active
                  ? m.keyDrop(e)
                  : n.cancel.includes(t)
                  ? ((m.newIndex = m.manager.active.index), m.keyDrop(e))
                  : n.up.includes(t)
                  ? m.keyMove(-1)
                  : n.down.includes(t) && m.keyMove(1));
            }),
            b(p(m), 'keyLift', function(e) {
              var t = e.target,
                n = H(t, function(e) {
                  return null != e.sortableInfo;
                }).sortableInfo,
                r = n.index,
                n = n.collection;
              (m.initialFocusedNode = t),
                (m.manager.isKeySorting = !0),
                (m.manager.active = {index: r, collection: n}),
                m.handlePress(e);
            }),
            b(p(m), 'keyMove', function(e) {
              var t,
                n,
                r,
                o,
                i = m.manager.getOrderedRefs(),
                a = i[i.length - 1].node.sortableInfo.index,
                l = m.newIndex + e,
                s = m.newIndex;
              l < 0 ||
                a < l ||
                ((m.prevIndex = s),
                (m.newIndex = l),
                (n = m.newIndex),
                (r = m.prevIndex),
                (o = m.index),
                (t = n < o && r < n ? n - 1 : o < n && n < r ? n + 1 : n),
                (o = (a = i.find(function(e) {
                  return e.node.sortableInfo.index === t;
                })).node),
                (r = m.containerScrollDelta),
                (n = a.boundingClientRect || B(o, r)),
                (i = a.translate || {x: 0, y: 0}),
                (a = n.top + i.y - r.top),
                (r = n.left + i.x - r.left),
                (l = (s = s < l) && m.axis.x ? o.offsetWidth - m.width : 0),
                (o = s && m.axis.y ? o.offsetHeight - m.height : 0),
                m.handleSortMove({
                  pageX: r + l,
                  pageY: a + o,
                  ignoreTransition: 0 === e,
                }));
            }),
            b(p(m), 'keyDrop', function(e) {
              m.handleSortEnd(e),
                m.initialFocusedNode && m.initialFocusedNode.focus();
            }),
            b(p(m), 'handleKeyEnd', function(e) {
              m.manager.active && m.keyDrop(e);
            }),
            b(p(m), 'isValidSortingTarget', function(e) {
              var t = m.props.useDragHandle,
                n = e.target,
                e = H(n, function(e) {
                  return null != e.sortableInfo;
                });
              return (
                e &&
                e.sortableInfo &&
                !e.sortableInfo.disabled &&
                (t ? ne(n) : n.sortableInfo)
              );
            });
          var t = new C();
          return (
            w(
              !((e = e).distance && e.pressDelay),
              'Attempted to set both `pressDelay` and `distance` on SortableContainer, you may only use one or the other, not both at the same time.',
            ),
            (m.manager = t),
            (m.wrappedInstance = a.createRef()),
            (m.sortableContextValue = {manager: t}),
            (m.events = {
              end: m.handleEnd,
              move: m.handleMove,
              start: m.handleStart,
            }),
            m
          );
        }
        return (
          h(r, [
            {
              key: 'componentDidMount',
              value: function() {
                var n = this,
                  t = this.props.useWindowAsScrollContainer,
                  e = this.getContainer();
                Promise.resolve(e).then(function(e) {
                  (n.container = e),
                    (n.document = n.container.ownerDocument || document);
                  e = n.props.contentWindow || n.document.defaultView || window;
                  (n.contentWindow = 'function' == typeof e ? e() : e),
                    (n.scrollContainer = t
                      ? n.document.scrollingElement ||
                        n.document.documentElement
                      : F(n.container) || n.container),
                    (n.autoScroller = new S(n.scrollContainer, n.onAutoScroll)),
                    Object.keys(n.events).forEach(function(t) {
                      return j[t].forEach(function(e) {
                        return n.container.addEventListener(e, n.events[t], !1);
                      });
                    }),
                    n.container.addEventListener('keydown', n.handleKeyDown);
                });
              },
            },
            {
              key: 'componentWillUnmount',
              value: function() {
                var n = this;
                this.helper &&
                  this.helper.parentNode &&
                  this.helper.parentNode.removeChild(this.helper),
                  this.container &&
                    (Object.keys(this.events).forEach(function(t) {
                      return j[t].forEach(function(e) {
                        return n.container.removeEventListener(e, n.events[t]);
                      });
                    }),
                    this.container.removeEventListener(
                      'keydown',
                      this.handleKeyDown,
                    ));
              },
            },
            {
              key: 'updateHelperPosition',
              value: function(e) {
                var t = this.props,
                  n = t.lockAxis,
                  r = t.lockOffset,
                  o = t.lockToContainerEdges,
                  i = t.transitionDuration,
                  a = t.keyboardSortingTransitionDuration,
                  l = void 0 === a ? i : a,
                  s = this.manager.isKeySorting,
                  t = e.ignoreTransition,
                  i = U(e),
                  a = {
                    x: i.x - this.initialOffset.x,
                    y: i.y - this.initialOffset.y,
                  };
                (a.y -= window.pageYOffset - this.initialWindowScroll.top),
                  (a.x -= window.pageXOffset - this.initialWindowScroll.left),
                  (this.translate = a),
                  o &&
                    ((e = {
                      height: this.height,
                      lockOffset: r,
                      width: this.width,
                    }),
                    (i = e.height),
                    (o = e.width),
                    (r = e.lockOffset),
                    (e = Array.isArray(r) ? r : [r, r]),
                    w(
                      2 === e.length,
                      'lockOffset prop of SortableContainer should be a single value or an array of exactly two values. Given %s',
                      r,
                    ),
                    (r = u(e, 2)),
                    (e = r[0]),
                    (r = r[1]),
                    (e = [
                      Y({height: i, lockOffset: e, width: o}),
                      Y({height: i, lockOffset: r, width: o}),
                    ]),
                    (r = (i = u(e, 2))[0]),
                    (o = i[1]),
                    (e = this.width / 2 - r.x),
                    (i = this.height / 2 - r.y),
                    (r = this.width / 2 - o.x),
                    (o = this.height / 2 - o.y),
                    (a.x = K(
                      this.minTranslate.x + e,
                      this.maxTranslate.x - r,
                      a.x,
                    )),
                    (a.y = K(
                      this.minTranslate.y + i,
                      this.maxTranslate.y - o,
                      a.y,
                    ))),
                  'x' === n ? (a.y = 0) : 'y' === n && (a.x = 0),
                  s && l && !t && L(this.helper, l),
                  W(this.helper, a);
              },
            },
            {
              key: 'animateNodes',
              value: function() {
                var e = this.props,
                  t = e.transitionDuration,
                  n = e.hideSortableGhost,
                  r = e.onSortOver,
                  o = this.containerScrollDelta,
                  i = this.windowScrollDelta,
                  a = this.manager.getOrderedRefs(),
                  l = this.offsetEdge.left + this.translate.x + o.left,
                  s = this.offsetEdge.top + this.translate.y + o.top,
                  c = this.manager.isKeySorting,
                  u = this.newIndex;
                this.newIndex = null;
                for (var f = 0, d = a.length; f < d; f++) {
                  var h = a[f].node,
                    p = h.sortableInfo.index,
                    y = h.offsetWidth,
                    g = h.offsetHeight,
                    m = this.height > g ? g / 2 : this.height / 2,
                    v = this.width > y ? y / 2 : this.width / 2,
                    x = c && p > this.index && p <= u,
                    b = c && p < this.index && u <= p,
                    w = {x: 0, y: 0},
                    S = a[f].edgeOffset;
                  S ||
                    ((S = X(h, this.container)),
                    (a[f].edgeOffset = S),
                    c && (a[f].boundingClientRect = B(h, o)));
                  var O = f < a.length - 1 && a[f + 1],
                    y = 0 < f && a[f - 1];
                  O &&
                    !O.edgeOffset &&
                    ((O.edgeOffset = X(O.node, this.container)),
                    c && (O.boundingClientRect = B(O.node, o))),
                    p !== this.index
                      ? (t && L(h, t),
                        this.axis.x
                          ? this.axis.y
                            ? b ||
                              (p < this.index &&
                                ((l + i.left - v <= S.left &&
                                  s + i.top <= S.top + m) ||
                                  s + i.top + m <= S.top))
                              ? ((w.x = this.width + this.marginOffset.x),
                                S.left + w.x >
                                  this.containerBoundingRect.width - v &&
                                  O &&
                                  ((w.x = O.edgeOffset.left - S.left),
                                  (w.y = O.edgeOffset.top - S.top)),
                                null === this.newIndex && (this.newIndex = p))
                              : (x ||
                                  (p > this.index &&
                                    ((l + i.left + v >= S.left &&
                                      s + i.top + m >= S.top) ||
                                      s + i.top + m >= S.top + g))) &&
                                ((w.x = -(this.width + this.marginOffset.x)),
                                S.left + w.x <
                                  this.containerBoundingRect.left + v &&
                                  y &&
                                  ((w.x = y.edgeOffset.left - S.left),
                                  (w.y = y.edgeOffset.top - S.top)),
                                (this.newIndex = p))
                            : x || (p > this.index && l + i.left + v >= S.left)
                            ? ((w.x = -(this.width + this.marginOffset.x)),
                              (this.newIndex = p))
                            : (b ||
                                (p < this.index && l + i.left <= S.left + v)) &&
                              ((w.x = this.width + this.marginOffset.x),
                              null == this.newIndex && (this.newIndex = p))
                          : this.axis.y &&
                            (x || (p > this.index && s + i.top + m >= S.top)
                              ? ((w.y = -(this.height + this.marginOffset.y)),
                                (this.newIndex = p))
                              : (b ||
                                  (p < this.index && s + i.top <= S.top + m)) &&
                                ((w.y = this.height + this.marginOffset.y),
                                null == this.newIndex && (this.newIndex = p))),
                        W(h, w),
                        (a[f].translate = w))
                      : n &&
                        M((this.sortableGhost = h), {
                          opacity: 0,
                          visibility: 'hidden',
                        });
                }
                null == this.newIndex && (this.newIndex = this.index),
                  c && (this.newIndex = u);
                e = c ? this.prevIndex : u;
                r &&
                  this.newIndex !== e &&
                  r({
                    collection: this.manager.active.collection,
                    index: this.index,
                    newIndex: this.newIndex,
                    oldIndex: e,
                    isKeySorting: c,
                    nodes: a,
                    helper: this.helper,
                  });
              },
            },
            {
              key: 'getWrappedInstance',
              value: function() {
                return (
                  w(
                    o.withRef,
                    'To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableContainer() call',
                  ),
                  this.wrappedInstance.current
                );
              },
            },
            {
              key: 'getContainer',
              value: function() {
                var e = this.props.getContainer;
                return 'function' != typeof e
                  ? this.childRef.current.firstElementChild
                  : e(o.withRef ? this.getWrappedInstance() : void 0);
              },
            },
            {
              key: 'render',
              value: function() {
                var e = o.withRef ? this.wrappedInstance : null;
                return a.createElement(
                  ue.Provider,
                  {value: this.sortableContextValue},
                  a.createElement(
                    E,
                    {ref: this.childRef},
                    a.createElement(t, l({ref: e}, P(this.props, ae))),
                  ),
                );
              },
            },
            {
              key: 'helperContainer',
              get: function() {
                var e = this.props.helperContainer;
                return 'function' == typeof e
                  ? e()
                  : this.props.helperContainer || this.document.body;
              },
            },
            {
              key: 'containerScrollDelta',
              get: function() {
                return this.props.useWindowAsScrollContainer
                  ? {left: 0, top: 0}
                  : {
                      left:
                        this.scrollContainer.scrollLeft -
                        this.initialScroll.left,
                      top:
                        this.scrollContainer.scrollTop - this.initialScroll.top,
                    };
              },
            },
            {
              key: 'windowScrollDelta',
              get: function() {
                return {
                  left:
                    this.contentWindow.pageXOffset -
                    this.initialWindowScroll.left,
                  top:
                    this.contentWindow.pageYOffset -
                    this.initialWindowScroll.top,
                };
              },
            },
          ]),
          r
        );
      })(a.Component));
    return (
      b(e, 'displayName', _('sortableList', t)),
      b(e, 'defaultProps', ie),
      b(e, 'propTypes', re),
      n
    );
  }
  function de(n) {
    var r = (function() {
      if ('undefined' == typeof Reflect || !Reflect.construct) return !1;
      if (Reflect.construct.sham) return !1;
      if ('function' == typeof Proxy) return !0;
      try {
        return (
          Date.prototype.toString.call(
            Reflect.construct(Date, [], function() {}),
          ),
          !0
        );
      } catch (e) {
        return !1;
      }
    })();
    return function() {
      var e,
        t = x(n);
      return (
        (t = r
          ? ((e = x(this).constructor), Reflect.construct(t, arguments, e))
          : t.apply(this, arguments)),
        v(this, t)
      );
    };
  }
  var he = {
      index: t.number.isRequired,
      collection: t.oneOfType([t.number, t.string]),
      disabled: t.bool,
    },
    pe = Object.keys(he);
  function ye(t) {
    var e,
      n =
        1 < arguments.length && void 0 !== arguments[1]
          ? arguments[1]
          : {withRef: !1},
      r = (e = (function(e) {
        g(i, e);
        var o = de(i);
        function i() {
          var e;
          f(this, i);
          for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
            n[r] = arguments[r];
          return (
            (e = o.call.apply(o, [this].concat(n))),
            b(p(e), 'childRef', a.createRef(null)),
            e
          );
        }
        return (
          h(i, [
            {
              key: 'componentDidMount',
              value: function() {
                this.register();
              },
            },
            {
              key: 'componentDidUpdate',
              value: function(e) {
                this.node &&
                  (e.index !== this.props.index &&
                    (this.node.sortableInfo.index = this.props.index),
                  e.disabled !== this.props.disabled &&
                    (this.node.sortableInfo.disabled = this.props.disabled)),
                  e.collection !== this.props.collection &&
                    (this.unregister(e.collection), this.register());
              },
            },
            {
              key: 'componentWillUnmount',
              value: function() {
                this.unregister();
              },
            },
            {
              key: 'register',
              value: function() {
                var e = this.props,
                  t = e.collection,
                  n = e.disabled,
                  r = e.index,
                  e = this.childRef.current;
                (e.sortableInfo = {
                  collection: t,
                  disabled: n,
                  index: r,
                  manager: this.context.manager,
                }),
                  (this.node = e),
                  (this.ref = {node: e}),
                  this.context.manager.add(t, this.ref);
              },
            },
            {
              key: 'unregister',
              value: function() {
                var e =
                  0 < arguments.length && void 0 !== arguments[0]
                    ? arguments[0]
                    : this.props.collection;
                this.context.manager.remove(e, this.ref);
              },
            },
            {
              key: 'getWrappedInstance',
              value: function() {
                return (
                  w(
                    n.withRef,
                    'To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableElement() call',
                  ),
                  this.wrappedInstance.current
                );
              },
            },
            {
              key: 'render',
              value: function() {
                var e = n.withRef ? this.wrappedInstance : null;
                return a.createElement(
                  E,
                  {ref: this.childRef},
                  a.createElement(t, l({ref: e}, P(this.props, pe))),
                );
              },
            },
          ]),
          i
        );
      })(a.Component));
    return (
      b(e, 'displayName', _('sortableElement', t)),
      b(e, 'contextType', ue),
      b(e, 'propTypes', he),
      b(e, 'defaultProps', {collection: 0}),
      r
    );
  }
  (e.SortableContainer = fe),
    (e.SortableElement = ye),
    (e.SortableHandle = te),
    (e.arrayMove = function(e, t, n) {
      return (
        (e = e.slice()).splice(n < 0 ? e.length + n : n, 0, e.splice(t, 1)[0]),
        e
      );
    }),
    (e.sortableContainer = fe),
    (e.sortableElement = ye),
    (e.sortableHandle = te),
    Object.defineProperty(e, '__esModule', {value: !0});
});
